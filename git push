[1mdiff --git a/Develop.py b/Develop.py[m
[1mindex 36ffb3b..45a37d6 100644[m
[1m--- a/Develop.py[m
[1m+++ b/Develop.py[m
[36m@@ -37,6 +37,7 @@[m [mclass RecordApp(toga.App):[m
     def go_back(self, widget):[m
         self.main_window.content = self.content_box[m
 [m
[32m+[m
     temp_values=[][m
     async def add_to_database(self, widget):[m
         if self.check_box.value == False:[m
[36m@@ -118,10 +119,51 @@[m [mclass RecordApp(toga.App):[m
         else:[m
             print("Not checked!")[m
 [m
[32m+[m[32m    def update_record(self, button):[m
[32m+[m[32m        conn = sql.connect('products.db')[m
[32m+[m[32m        cursor = conn.cursor()[m
[32m+[m[32m        cursor.execute('UPDATE products SET product_name=? ,length= ?,width=? ,weight=? WHERE product_name = ?', (self.desc_input.value,self.length_input.value,self.width_input.value,self.weight_input.value,self.desc_input.value))[m
[32m+[m[32m        conn.commit()[m
[32m+[m[32m        conn.close()[m
[32m+[m[32m        self.main_window.show()[m
[32m+[m
[32m+[m[32m    def on_row_update(self, widget):[m
[32m+[m
[32m+[m[32m        self.update_box = toga.Box(style=Pack(direction=COLUMN,  margin=20))[m
[32m+[m[32m        self.update_box.add()[m
[32m+[m
[32m+[m[32m        self.label = toga.Label("Record Update", style=Pack(text_align="center", margin=10,font_weight="bold"))[m
[32m+[m[32m        self.desc_input = toga.TextInput(placeholder="Description", on_change=self.validate_string)[m
[32m+[m[32m        self.length_input = toga.TextInput(placeholder="Length", on_change=self.validate_number)[m
[32m+[m[32m        self.width_input = toga.TextInput(placeholder="Width", on_change=self.validate_number)[m
[32m+[m[32m        self.weight_input = toga.TextInput(placeholder="Weight", on_change=self.validate_number)[m
[32m+[m[32m        self.ok_button = toga.Button([m
[32m+[m[32m            "Update Record",[m
[32m+[m[32m            on_press= self.update_record,[m
[32m+[m[32m              style=Pack(margin_top=10)[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m        self.update_box.add(self.label)[m
[32m+[m[32m        self.update_box.add(self.desc_input)[m
[32m+[m[32m        self.update_box.add(self.length_input)[m
[32m+[m[32m        self.update_box.add(self.width_input)[m
[32m+[m[32m        self.update_box.add(self.weight_input)[m
[32m+[m[32m        self.update_box.add(self.ok_button)[m
[32m+[m
[32m+[m[32m        self.popupWindow= toga.Window(title = "Popup")[m
[32m+[m[32m        self.popupWindow.content = self.update_box[m
[32m+[m[32m        self.popupWindow.show()[m
[32m+[m[32m        #[m
[32m+[m[32m        # self.selected_index = widget.selection.__getattribute__("id")[m
[32m+[m[32m        # print(self.selected_index)[m
[32m+[m[32m        # self.table.data[self.selected_index] = [self.selected_index,"A",0,0,0][m
[32m+[m[32m        # print(self.table.data[self.selected_index])[m
[32m+[m
[32m+[m
     def correct_record(self, button):[m
         conn = sql.connect('products.db')[m
         cursor = conn.cursor()[m
[31m-        results =cursor.execute("SELECT * FROM products LIMIT 7")[m
[32m+[m[32m        results =cursor.execute("SELECT * FROM products ")[m
         results = cursor.fetchall()[m
 [m
         # self.new_record_boxadd(toga.Label("Add New Record", style=Pack(text_align="center", margin=10)))[m
[36m@@ -129,13 +171,17 @@[m [mclass RecordApp(toga.App):[m
         self.results_box = toga.Box( style=Pack(direction=COLUMN))[m
         self.results_box.add()[m
 [m
[31m-        self.label =toga.Label("Current Records", style=Pack(text_align="center"), padding_top=50)[m
[32m+[m[32m        self.label =toga.Label("Current Records", style=Pack(text_align="center",font_style="italic", font_weight="bold",font_size=14), margin_top=50)[m
         self.table = toga.Table(headings=["ID", "Description", "Length", "Width", "Weight"], data=results, style=Pack(direction=COLUMN, flex=1), margin=10)[m
[31m-[m
         self.results_box.add(self.label)[m
 [m
         self.results_box.add(self.table)[m
 [m
[32m+[m[32m        self.update_button = toga.Button(" Update Value",  style=Pack(margin_top=10), on_press=self.on_row_update)[m
[32m+[m[32m        self.results_box.add(self.update_button)[m
[32m+[m
[32m+[m[32m        self.exit_button = toga.Button("Exit Back",on_press=self.go_back,style=Pack(margin_top=10))[m
[32m+[m[32m        self.results_box.add(self.exit_button)[m
 [m
         self.main_window.content = self.results_box[m
         self.main_window.show()[m
[1mdiff --git a/Truck_Storage.py b/Truck_Storage.py[m
[1mindex 401c234..7e4182f 100644[m
[1m--- a/Truck_Storage.py[m
[1m+++ b/Truck_Storage.py[m
[36m@@ -8,7 +8,7 @@[m [mconn = sql.connect("products.db")[m
 [m
 # Create a cursor object to interact with the database[m
 cursor = conn.cursor()[m
[31m-[m
[32m+[m[32m#[m
 # # Create the table[m
 # cursor.execute("""[m
 # CREATE TABLE products ([m
[36m@@ -34,7 +34,7 @@[m [mcursor = conn.cursor()[m
 # Delete specific row by ID[m
 [m
 # cursor.execute("DELETE FROM products WHERE id = 6")[m
[31m-# conn.commit()[m
[32m+[m[32mconn.commit()[m
 [m
 [m
 [m
[36m@@ -43,136 +43,3 @@[m [mrows = cursor.fetchall()[m
 [m
 for row in rows:[m
     print(row)[m
[31m-[m
[31m-#Create the GUI to interact with the DataBase and add records[m
[31m-#[m
[31m-# import toga[m
[31m-# from toga.style import Pack[m
[31m-# from toga.style.pack import COLUMN, ROW[m
[31m-#[m
[31m-#[m
[31m-# class RecordApp(toga.App):[m
[31m-#     def startup(self):[m
[31m-#         # Main box[m
[31m-#         layout = toga.Box(style=Pack(direction=COLUMN, padding=10))[m
[31m-#[m
[31m-#         # Buttons for actions[m
[31m-#         self.new_button = toga.Button([m
[31m-#             "New Record",[m
[31m-#             on_press=self.new_record,[m
[31m-#             style=Pack(padding=5, width=150)[m
[31m-#         )[m
[31m-#         self.correct_button = toga.Button([m
[31m-#             "Correct Record",[m
[31m-#             on_press=self.show_correct_record_list,[m
[31m-#             style=Pack(padding=5, width=150)[m
[31m-#         )[m
[31m-#[m
[31m-#         # Button box[m
[31m-#         button_box = toga.Box(style=Pack(direction=ROW, padding=10))[m
[31m-#         button_box.add(self.new_button)[m
[31m-#         button_box.add(self.correct_button)[m
[31m-#[m
[31m-#         self.main_box.add(button_box)[m
[31m-#[m
[31m-#         # Placeholder for dynamic content[m
[31m-#         self.content_box = toga.Box(style=Pack(direction=COLUMN, padding=10))[m
[31m-#         self.main_box.add(self.content_box)[m
[31m-#[m
[31m-#         # Store records[m
[31m-#         self.records = [][m
[31m-#[m
[31m-#         # Create main window[m
[31m-#         self.main_window = toga.MainWindow(title="Record Manager")[m
[31m-#         self.main_window.content = self.main_box[m
[31m-#         self.main_window.show()[m
[31m-#[m
[31m-#     # === NEW RECORD MODE ===[m
[31m-#     def show_new_record_form(self, widget):[m
[31m-#         self.content_box.clear()[m
[31m-#[m
[31m-#         self.desc_input = toga.TextInput(placeholder="Description")[m
[31m-#         self.length_input = toga.TextInput(placeholder="Length")[m
[31m-#         self.width_input = toga.TextInput(placeholder="Width")[m
[31m-#         self.weight_input = toga.TextInput(placeholder="Weight")[m
[31m-#[m
[31m-#         save_button = toga.Button([m
[31m-#             "Save Record",[m
[31m-#             on_press=self.save_record,[m
[31m-#             style=Pack(padding_top=10)[m
[31m-#         )[m
[31m-#[m
[31m-#         self.content_box.add(toga.Label("Add New Record:"))[m
[31m-#         self.content_box.add(self.desc_input)[m
[31m-#         self.content_box.add(self.length_input)[m
[31m-#         self.content_box.add(self.width_input)[m
[31m-#         self.content_box.add(self.weight_input)[m
[31m-#         self.content_box.add(save_button)[m
[31m-#[m
[31m-#     def save_record(self, widget):[m
[31m-#         record = {[m
[31m-#             "Description": self.desc_input.value,[m
[31m-#             "Length": self.length_input.value,[m
[31m-#             "Width": self.width_input.value,[m
[31m-#             "Weight": self.weight_input.value[m
[31m-#         }[m
[31m-#         self.records.append(record)[m
[31m-#         self.main_window.info_dialog("Saved", "Record added successfully!")[m
[31m-#         self.content_box.clear()[m
[31m-#[m
[31m-#     # === CORRECT RECORD MODE ===[m
[31m-#     def show_correct_record_list(self, widget):[m
[31m-#         self.content_box.clear()[m
[31m-#[m
[31m-#         if not self.records:[m
[31m-#             self.content_box.add(toga.Label("No records available."))[m
[31m-#             return[m
[31m-#[m
[31m-#         self.table = toga.Table([m
[31m-#             headings=["Description", "Length", "Width", "Weight"],[m
[31m-#             data=[[r["Description"], r["Length"], r["Width"], r["Weight"]] for r in self.records],[m
[31m-#             on_select=self.edit_selected_record[m
[31m-#         )[m
[31m-#[m
[31m-#         self.content_box.add(toga.Label("Select a record to correct:"))[m
[31m-#         self.content_box.add(self.table)[m
[31m-#[m
[31m-#     def edit_selected_record(self, widget, row):[m
[31m-#         if row is None:[m
[31m-#             return[m
[31m-#[m
[31m-#         self.content_box.clear()[m
[31m-#         idx = widget.data.index(row)[m
[31m-#         record = self.records[idx][m
[31m-#[m
[31m-#         self.edit_desc = toga.TextInput(value=record["Description"])[m
[31m-#         self.edit_length = toga.TextInput(value=record["Length"])[m
[31m-#         self.edit_width = toga.TextInput(value=record["Width"])[m
[31m-#         self.edit_weight = toga.TextInput(value=record["Weight"])[m
[31m-#[m
[31m-#         save_button = toga.Button([m
[31m-#             "Save Changes",[m
[31m-#             on_press=lambda w: self.save_corrections(idx),[m
[31m-#             style=Pack(padding_top=10)[m
[31m-#         )[m
[31m-#[m
[31m-#         self.content_box.add(toga.Label("Edit Record:"))[m
[31m-#         self.content_box.add(self.edit_desc)[m
[31m-#         self.content_box.add(self.edit_length)[m
[31m-#         self.content_box.add(self.edit_width)[m
[31m-#         self.content_box.add(self.edit_weight)[m
[31m-#         self.content_box.add(save_button)[m
[31m-#[m
[31m-#     def save_corrections(self, index):[m
[31m-#         self.records[index] = {[m
[31m-#             "Description": self.edit_desc.value,[m
[31m-#             "Length": self.edit_length.value,[m
[31m-#             "Width": self.edit_width.value,[m
[31m-#             "Weight": self.edit_weight.value[m
[31m-#         }[m
[31m-#         self.main_window.info_dialog("Updated", "Record updated successfully!")[m
[31m-#         self.show_correct_record_list(None)[m
[31m-#[m
[31m-#[m
[31m-# def main():[m
[31m-#     return RecordApp("Record Manager", "org.example.recordapp")[m
